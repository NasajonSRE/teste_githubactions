name: "Agora e o certo guigui"

on:
  push:
    branches:
      - main
      - development
  workflow_dispatch:

env:
  SPRINT: 2306

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      BRANCH: ${{ env.branch }}
      NAMES: ${{ env.nomes }}
    #   VERSION: ${{ steps.setvars.outputs.version }}
    #   VAULT_URL: ${{ steps.setvars.outputs.vault_url }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{github.base_ref}}

      - name: Install yq 
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.12.0/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
          yq --version

      - name: Set variables
        id: setvars
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
          files=$(find ci -name "*-values.yaml" -type f -printf "%f\n")
          # echo "arquivos=${files[@]}" >> "$GITHUB_ENV"
          file_list=()
          for file in $files; do
            echo $file
            release=$(yq '.release' ci/$file)
            echo $release
            if [[ $release == $branch ]]; then
              echo here
              name="${file%-values.yaml}"
              file_list+=("$name")
            fi
          done
          echo "nomes=${file_list[@]}" >> "$GITHUB_ENV"

  print:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Sets env vars for environment
        run: |
          echo "BRANCH=$(echo ${{needs.init.outputs.BRANCH}})" >> $GITHUB_ENV

      # - name: Sets Vault Key
      #   run: |
      #     if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/production" ]]; then
      #       echo "TESTE=${{ secrets.TESTE }}" >> "$GITHUB_ENV"
      #     fi

      #     if [[ "${{github.base_ref}}" == "development" || "${{github.ref}}" == "refs/heads/development" ]]; then
      #       echo "TESTE=${{ secrets.TESTE_DEV }}" >> "$GITHUB_ENV"
      #     fi

      - name: Print
        env:
          NAMES: ${{ needs.init.outputs.NAMES }}
        run: |
          echo $BRANCH
          for file in $NAMES; do echo $file; done